name: Security Scan

on:
  pull_request_target:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit pip-audit

      - name: Run Security Scan
        id: security_scan
        run: |
          echo "Running Bandit..."
          bandit -r . -f txt -o bandit-results.txt || true

          echo "Running pip-audit..."
          if [ -f "requirements.txt" ]; then
            pip-audit -r requirements.txt > pip-audit-results.txt || true
          else
            echo "No requirements.txt found. Skipping pip-audit." > pip-audit-results.txt
          fi

          echo "Combining Results..."
          echo "ðŸ”’ Security Scan Results" > security-scan-results.txt
          echo "=========================" >> security-scan-results.txt
          echo "" >> security-scan-results.txt

          echo "Bandit Scan Results:" >> security-scan-results.txt
          echo "-------------------" >> security-scan-results.txt
          cat bandit-results.txt >> security-scan-results.txt

          echo "" >> security-scan-results.txt
          echo "Dependency Check Results (pip-audit):" >> security-scan-results.txt
          echo "-------------------------" >> security-scan-results.txt
          cat pip-audit-results.txt >> security-scan-results.txt

          # Check for critical/high issues
          if grep -iE "CRITICAL|HIGH" pip-audit-results.txt > /dev/null 2>&1 || grep -iE "Severity: High|Severity: Critical" bandit-results.txt > /dev/null 2>&1; then
            echo "vulnerabilities_found=true" >> $GITHUB_OUTPUT
          else
            echo "vulnerabilities_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload scan results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            security-scan-results.txt
            bandit-results.txt
            pip-audit-results.txt
          retention-days: 5

      - name: Fail if vulnerabilities found
        if: steps.security_scan.outputs.vulnerabilities_found == 'true'
        run: |
          echo "::error::Critical vulnerabilities found in scan. Please address them before merging."
          exit 1
